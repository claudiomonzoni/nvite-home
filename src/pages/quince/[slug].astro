---
export const prerender = true;
import { getCollection, render } from "astro:content";
import type { CollectionEntry } from "astro:content";
import Layout from "../../layouts/quince/Layout.astro";
import Footer from "../../components/quince/Footer.astro";

//componentes
import Hero from "../../components/quince/Hero";
import Audio from "../../components/quince/Audio.astro";
import ProgresoInvitados from "../../components/comunes/ProgresoInvitados.astro";
import MensajeVip from "../../components/comunes/MensajeVip.astro";
import ParrafosLibres from "../../components/quince/ParrafosLibres.astro";
import Encabezados from "../../components/quince/Encabezados.astro";
import Cartas from "../../components/quince/Cartas.astro";
import Frase from "../../components/quince/Frase.astro";
import SilderGsap from "../../components/comunes/SilderGsap.astro";
import BloqueMapa from "../../components/quince/BloqueMapa.astro";
import Regalos from "../../components/comunes/Regalos.astro";
import Contador from "../../components/bodas/Contador.astro";
import Itinerario from "../../components/quince/Itinerario.astro";
import Confirmacion from "../../components/quince/Confirmacion";  
import Detalles from "../../components/bodas/Detalles.astro";
import FotoSolitaria from "../../components/comunes/FotoSolitaria.astro";



export async function getStaticPaths() {
  const quinces = await getCollection("quince", ({ data }) => {
    return !data.draft;
  });
  return quinces.map((quince) => ({
    params: { slug: quince.id },
    props: { quince },  
  }));
}
interface Props {
  quince: CollectionEntry<"quince">;
}
type quince = CollectionEntry<"quince">;

const { quince } = Astro.props;

const base = new URL(Astro.url.pathname, Astro.site);
const Nfecha = new Date(quince.data.fecha);

const { Content } = await render(quince);

const imagenesSolitarias: string[] =
  (quince.data as any).imagenesSolitarias ?? [];


// Tipado local para la galería mientras se regeneran los tipos de Keystatic
const galeria: string[] = (quince.data as any).galeria ?? [];
// Tipado y normalización local para mesas de regalos
type Mesa = { url: string; titulo: string };
const mesas: Mesa[] = ((quince.data as any).regalos ?? []).filter(
  (m: any): m is Mesa => typeof m?.url === 'string' && m.url && typeof m?.titulo === 'string' && m.titulo
);

console.log(imagenesSolitarias, "imagenes solitarias"); 
---

<Layout
  title=`Invitación de quince de ${quince.data.quinceanera}`
  url={base.toString()}
  cover={quince.data.cover}
  paleta={quince.data.paleta}
  theme={quince.data.theme}
>


<Hero
  nombres={quince.data.quinceanera}
  fecha={quince.data.fecha}
  cover={quince.data.cover}
  client:load
/>

<section class="grid contenido">
  <Audio src="/quince/quincePlus/quince-musica" />
</section>

<Encabezados texto="Mis 15 años" />

<!-- <ParrafosLibres
  texto="He soñado mucho con este día, y me llena de ilusión compartirlo contigo.
Para que no se te pase nada, revisa todos los detalles aquí abajo:"
/> -->

<section class="grid contenido">
  <div class="conte-cartas">
    <Cartas
    icono="mdi:list-status"
    titulo="Detalles"
    array={quince.data.consideraciones}
    />
    <Cartas
    icono="mdi:clothes-hanger"
    titulo="Dress code"
    codigo={quince.data.vestimenta}
    />
    <Cartas
      icono="mdi:clipboard-text-date-outline"
      titulo="Sugerencia de tonos"
      tonos={quince.data.coloresVestimenta}
    />
  </div>
</section>

<section class="grid contenido">
  <Frase frase={quince.data.frase_amor} />
</section>

<Encabezados texto="El Lugar" />
<section class="grid contenido fondo-mitad">
  <!-- <ParrafosLibres
    texto="Te compartimos la ubicación, te esperamos en la ceremonia religiosa y en
      la fiesta de XV años, ¡No faltes!"
  /> -->
  <div id="zigzag">
    <BloqueMapa
      encabezado="Ceremonia"
      dir={quince.data.ceremonia.lugar}
      horario={quince.data.ceremonia.hora}
      lat={quince.data.ceremonia.lat}
      lng={quince.data.ceremonia.lng}
      mapName="mapa1"
    />
    <BloqueMapa
      encabezado="Recepción"
      dir={quince.data.recepcion.lugar}
      horario={quince.data.recepcion.hora}
      lat={quince.data.recepcion.lat}
      lng={quince.data.recepcion.lng}
      mapName="mapa2"
    />
  </div>
</section>

 <!-- Imágenes solitarias condicionales -->
  {
    imagenesSolitarias[0] && (
      <FotoSolitaria
        arriba={false}
        gradientePorciento={40}
        src={imagenesSolitarias[0]}
      />
    )
  }
<section class="grid contenido">
  <Contador fecha={quince.data.fecha.toISOString().split('T')[0]} />
</section>


<section class="grid pantalla">
  <ProgresoInvitados
    email={quince.data.email ?? "nvitacionluxquince@nvitaciones.com"}
    porcentajeMostrarInvitados={(quince.data.progresoPorcentaje ?? 20) as number}
    frase={quince.data.progresoFrase ?? "¡Ya casi completamos la lista de invitados!"}
    mostrarSiempre={quince.data.progresoMostrarSiempre ?? true}
  />
</section>

<Itinerario listado={quince.data.itinerario} />

<section class="grid pantalla">
  <SilderGsap>
    {galeria && galeria.map((src) => (
      <img src={src} alt={`Galería de ${quince.data.quinceanera || 'XV Años'}`} loading="lazy" />
    ))}
  </SilderGsap>
</section>
<!--  
  <section class="grid pantalla flex margen-arriba-abajo">
    <Detalles lista={quince.data.consideraciones} encabezado="Consideraciones" />
    <Detalles encabezado="Codigo de vestir" vestimenta={quince.data.vestimenta} />
    <Detalles
    encabezado="Sugerencia de tonos"
    colores={quince.data.coloresVestimenta}
    />
  </section>
  -->

<section class="grid contenido">

  <Regalos
  tipo={quince.data.tipoRegalos}
  mesas={mesas}
      frase={quince.data.frase_regalos}
      beneficiario={quince.data.beneficiario}
      banco={quince.data.banco}
      cuenta={quince.data.cuenta}
    />
</section>

<section class="grid contenido">
  <MensajeVip />
</section>


 <Confirmacion
  whatsapp={quince.data.whatsapp}
  dias_antes={15}
  version={quince.data.version}
  client:only="react"
/> 

  <section class="grid contenido">
    <Footer ruta={base} />
  </section>
</Layout>