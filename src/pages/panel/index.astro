---
import { NvitaAuth } from "../../firebase/config";
import Layout from "../../layouts/panelInvitados.astro";

import Invitado from "../../components/PanelInvitados/Invitado.astro";
import type { InvitadoProps } from "../../components/PanelInvitados/Invitado.astro";
import AgregarInvitado from "../../components/PanelInvitados/AgregarInvitado.astro";
import EditarInvitado from "../../components/PanelInvitados/EditarInvitado.astro";
import { Usuario, db, eq } from "astro:db";

const usuarioEmail = NvitaAuth.currentUser?.email;
const request = await fetch(
  `${Astro.url.origin}/api/getInvitados.json?email=${usuarioEmail}`
);
let invitadosData = null;

try {
  const data = await request.json();
  invitadosData = Array.isArray(data) ? data : null; // Asegura que sea un array o null si hay un error
} catch (error) {
  console.error("Error al obtener los datos de invitados:", error);
  invitadosData = null; // Manejo del error
}

const usuarios = await db
  .select()
  .from(Usuario)
  .where(eq(Usuario.email, usuarioEmail));
const tipoInvitacion = usuarios[0].tipo;
const ruta = usuarios[0].ruta;

---

<Layout title="Panel de administración">
  <h2>
    {(<p>Bienvenido {usuarioEmail} tipo {tipoInvitacion} ruta {ruta}</p>)}
  </h2>

  <ul>
    {
      invitadosData === null ? (
        <h2>Error al cargar los datos. Intente de nuevo más tarde.</h2>
      ) : invitadosData.length > 0 ? (
        invitadosData.map((invi: InvitadoProps) => (
          <li>
            <Invitado invitadoData={invi} ruta={ruta} tipo={tipoInvitacion} />
          </li>
        ))
      ) : (
        <p>No tienes invitados aún. Usa el botón de abajo para agregar uno.</p>
      )
    }
  </ul>

  {
    invitadosData !== null && (
      <>
        <button id="agregar-invitado">Agregar invitado</button>
        <AgregarInvitado />
        <EditarInvitado />
      </>
    )
  }

<div id="salirLog">
  <form data-authForm action="../api/salir.json">
    <button>Salir del panel de invitados</button>
  </form>
</div>
</Layout>


