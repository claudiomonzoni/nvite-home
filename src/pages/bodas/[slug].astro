---
export const prerender = true;
import { getCollection, render } from "astro:content";
import type { CollectionEntry } from "astro:content";
import Layout from "../../layouts/bodas/Layout.astro";
import Hero from "../../components/bodas/Hero";
import Footer from "../../components/bodas/Footer.astro";

export async function getStaticPaths() {
  const bodas = await getCollection("bodas", ({ data }) => {
    return !data.draft;
  });

  return bodas.map((boda) => ({
    params: { slug: boda.id },
    props: { boda },
  }));
}
type boda = CollectionEntry<"bodas">;
interface Props {
  boda: CollectionEntry<"bodas">;
}
const { boda } = Astro.props;
const { Content } = await render(boda);
const base = new URL(Astro.url.pathname, Astro.site);

// Fix date handling
const Nfecha = new Date(boda.data.fecha);
// Adjust for timezone offset
Nfecha.setMinutes(Nfecha.getMinutes() + Nfecha.getTimezoneOffset());

const dia = Nfecha.toLocaleDateString("es-MX", {
  weekday: "long",
});
const diaNum = Nfecha.getDate().toString(); // Get actual date number
const mes = Nfecha.toLocaleDateString("es-MX", {
  month: "long",
});
const ano = Nfecha.getFullYear().toString();

console.log(boda.data.theme)

---

<Layout
  title=`InvitaciÃ³n de boda de ${boda.data.novios}`
  url={base.toString()}
  cover={boda.data.cover}
  paleta={boda.data.paleta}
>
  <Hero
    nombres={boda.data.novios}
    dia={dia}
    diaNum={diaNum}
    mes={mes}
    ano={ano}
    ellaIniciales={boda.data.ellaIniciales}
    elIniciales={boda.data.elIniciales}
    cover={boda.data.cover}
    client:load
  />
  <Content />
  <section class="grid contenido">
    <Footer ruta={base} />
  </section>
</Layout>




