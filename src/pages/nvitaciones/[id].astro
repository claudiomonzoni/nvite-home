---
// Importaciones principales
const { id } = Astro.params;
import { getProductPrice } from "../../js/cart";
import { calculateDeliveryDate } from "../../js/utils";
import { Image } from "astro:assets";
import { getEntry } from "astro:content";
import { Icon } from "astro-icon/components";

// Componentes
import Layout from "../../layouts/Layout.astro";
import Footer from "../../components/Footer.astro";
import Nav from "../../components/Nav.astro";
import Btn from "../../components/Btn.astro";
import Breadcrumb from "../../components/Breadcrumb.astro";
import SocialShare from "../../components/SocialShare.astro";
import RelatedProducts from "../../components/Pagos/RelatedProducts.astro";
import Testimonios from "../../components/Testimonios.astro";

// Datos
import nvitacionesData from "./nvitaciones.json";

// Configuración de imágenes
const imageModules = import.meta.glob<{ default: ImageMetadata }>(
  "../../assets/cart/**/*.{jpg,jpeg,png,gif,webp}",
  { eager: true }
);

// Función para cargar las imágenes del producto
async function getProductImages(nvitacionInfo) {
  if (!product) return [];
  
  try {
    const imagenes = [];
    
    // Primero añadir la imagen de Stripe si está disponible
    if (product.data.images?.length > 0) {
      imagenes.push(product.data.images[0]);
    }

    // Luego añadir imágenes desde nvitacionInfo
    if (nvitacionInfo?.imagenes) {
      for (const imagePath of nvitacionInfo.imagenes) {
        const normalizedPath = imagePath.replace(/\\/g, '/');
        const moduleKey = Object.keys(imageModules).find(key => {
          const keyLower = key.toLowerCase();
          const pathLower = normalizedPath.toLowerCase();
          return keyLower.endsWith(pathLower.replace('../../assets/', ''));
        });

        if (moduleKey && moduleKey in imageModules) {
          imagenes.push(imageModules[moduleKey].default);
        } else {
          console.error(`No se pudo cargar la imagen: ${imagePath}`);
        }
      }
    }
    
    return imagenes;
  } catch (error) {
    console.error("Error cargando imágenes:", error);
    return product.data.images || [];
  }
}

// Obtener datos del producto
const product = await getEntry("productos", id as string);
const nvitacionInfo = nvitacionesData.find(item => item.id === product?.data.id);
const imagenes = await getProductImages(nvitacionInfo);

// Manejo de 404
if (!product) {
  return new Response(null, { status: 404, statusText: "Not Found" });
}

const price = await getProductPrice(product);
const productId = product.data.id;
---

<Layout
  title=`${product.data.name} - Invitación Digitales para tu evento`
>
  <div class="grid contenido">
    <Nav />

    <div class="breadcrumb-container">
      <Breadcrumb
        categoria={nvitacionInfo?.categoria || "pdf"}
        nombre={product.data.name}
      />
    </div>

    <div id="producto-conte">      <div id="izq">
        <div id="fix">
          <div class="gallery-container">
            <div class="thumbnails-container">
              {                imagenes.map((imagen) => (
                  <div class="thumbnail-wrapper" data-full-img={imagen.src}>
                    <Image
                      src={imagen}
                      alt={`Imagen de ${product.data.name}`}
                      height={80}
                      width={80}
                      class="thumbnail"
                      quality="max"
                    />
                  </div>
                ))
              }
            </div>            
            <div class="main-image-container">
              <Image
                src={imagenes[0]}
                loading="eager"
                alt={product.data.name}
                height={800}
                width={800}
                class="main-image"
                quality="max"
              />
            </div>
          </div>
        </div>
      </div>

      <div id="der">
        <div id="titulo">
          <div class="metadata">
            {
              nvitacionInfo && (
                <>
                  {nvitacionInfo.categoria && (
                    <li>Categoría: {nvitacionInfo.categoria}</li>
                  )}
                  {nvitacionInfo.tipo && <li>Tipo: {nvitacionInfo.tipo}</li>}
                  {nvitacionInfo.version && (
                    <li>Versión: {nvitacionInfo.version}</li>
                  )}
                </>
              )
            }
          </div>
          <p>{product.data.id}</p>
          <h1>{product.data.name}</h1>
          <p>{product.data.description}</p>         
          <p class="price">{price.slice(0, -2)}<sup>{price.slice(-2)}</sup></p>
      
          
          <div id="datosjson">
            {
              nvitacionInfo && (
                <div class="info-adicional">
                  {nvitacionInfo.beneficios && (
                    <ul class="beneficios">
                      {nvitacionInfo.beneficios.map((beneficio) => (
                        <li class="check-item">{beneficio}</li>
                      ))}
                    </ul>
                  )}
                </div>
              )
            }
            
              <div id="video-home">
                {nvitacionInfo && nvitacionInfo.video && (
                  <div id="play">
                    <Icon name="mdi:play-circle" color="white" size={70} />
                  </div>
                <video
                preload="metadata"
                poster={product.data.images[0]}
                id="video-producto"
                >
                  <source src={nvitacionInfo.video} type="video/mp4" />
                </video>
                  )}
              </div>
          </div>
        </div>

        <div class="buttons-container">
          <Btn
            data-cart
            data-action="increment"
            data-productid={product.data.id}
            liga="#"
            texto="Agregar al carrito"
            clases="btn-oscuro"
            claro={false}
            icono="mdi:cart"
          />
          <Btn
            data-cart
            data-action="buy-now"
            data-productid={product.data.id}
            liga="#"
            clases="btn-claro"
            texto="Comprar ahora"
            icono="mdi:cart"
            claro={true}
          />
          <div id="ahora">
            <p>
              Compra ahora y <b>recibe tu invitación</b>a más tardar el {
                calculateDeliveryDate()
              }
            </p>
            <a id="terminos" href="/terminos-condiciones"
              >ver terminos y condiciones</a
            >
          </div>          <SocialShare 
            url={Astro.url.toString()} 
            title={`Mira esta ${nvitacionInfo?.tipo || 'invitación'} en Nvitaciones.com: ${product.data.name}`}
          />
        </div>
      </div>    </div>
    
    <RelatedProducts
      currentProductId={product.id}
      category={nvitacionInfo?.categoria || product.data.metadata?.Categoria || ""}
    />
  </div>
   <Testimonios />
  <Footer />
</Layout>

<style lang="scss">
  @use "../../estilos/variables" as *;
  .breadcrumb-container {
    margin-top: 7rem;
    @include cel {
      margin-top: 12rem;
    }
  }
  h1 {
    color: $primario;
    font-size: clamp(2rem, 5vw, 3rem);
    border-bottom: solid 1px $primario;
  }
  #producto-conte {
    display: grid;
    grid-template-columns: 1fr 2fr;
    gap: 2rem;
    align-items: stretch;

    @include cel {
      grid-template-columns: 1fr;
    }
  }
  #izq {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    height: 100%;
    position: relative;
    overflow: visible; // Allow sticky content to overflow
  }
  #fix {
    position: sticky;
    top: 4rem; // Distance from top of viewport
  }
  #der {
    display: grid;
    grid-template-columns: 2fr 1fr;
    gap: 2rem;
    height: 100%;

    #titulo {
      display: grid;
      gap: 1rem;
    }

    .buttons-container {
      display: grid;
      align-self: flex-start;
      background: white;
      border-radius: $radio;
      a {
        max-width: 100%;
        margin: 0;
      }
      p {
        font-size: 0.8rem;
      }
      @extend .sombra;
      padding: $margen-min;
    }
    @include cel {
      grid-template-columns: 1fr;
      gap: 0;
      height: auto;
    }
  }
  .buttons-container {
    display: flex;
    gap: 1rem;
    margin-top: 1rem;
    align-items: flex-start;
  }
  #vendidos {
    font-size: 0.8rem;
    color: $gris;
  }
  #ahora {
    p {
      font-size: 0.8rem;
      color: $acento;
      margin-top: 1rem;
      b {
        margin-right: 0.5rem;
      }
    }
  }
  #datosjson {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }
  .info-adicional {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }
  .video-container {
    display: flex;
    justify-content: center;
  }

  .metadata {
    display: flex;
    color: $acento;
    font-size: 0.8rem;
    gap: 0.7rem;
    li {
      list-style: none;
      margin: 0;
    }
  }
  #terminos {
    font-size: 0.6rem;
    color: $gris;
    text-decoration: underline;
  }
  .price {
    font-size: 1.5rem;
    font-weight: bold;
    color: $primario;
    sup {
      font-size: 0.5em;
      vertical-align: super;
    }
  }
  #video-home {
    width: 100%;
    max-width: 337px;
    margin: 0 auto;
    position: relative;
    border-radius: $radio;
    overflow: hidden;

    video {
      width: 100%;
      display: block;
      border-radius: $radio;
    }

    #play {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      z-index: 1;
      cursor: pointer;

      svg {
        width: 70px;
        height: 70px;
        path {
          fill: $acento;
        }
      }
    }
  }
</style>

<script>
  import { generateRandomSales } from "../../js/utils";

  // Inicialización de mensajes de ventas
  function initializeSalesMessage() {
    const vendidosDiv = document.getElementById('vendidos');
    const productId = document.querySelector('[data-productid]')?.getAttribute('data-productid');
    
    if (!vendidosDiv || !productId) return;

    const cookieKey = `sales_${productId}`;
    const existingNumber = document.cookie
      .split(';')
      .find(c => c.trim().startsWith(`${cookieKey}=`))
      ?.split('=')[1];

    let salesNumber = existingNumber ? 
      parseInt(existingNumber) : 
      generateRandomSales();

    if (!existingNumber) {
      const expires = new Date();
      expires.setDate(expires.getDate() + 7);
      document.cookie = `${cookieKey}=${salesNumber};expires=${expires.toUTCString()};path=/`;
    }

    if (salesNumber > 0) {
      vendidosDiv.innerHTML = `<b>${salesNumber} Nvitaciones vendidas</b> en el último mes.`;
    }
  }

  // Inicialización de botones de compra
  function initializeBuyNowButtons() {
    const buyNowButtons = document.querySelectorAll('[data-action="buy-now"]');
    buyNowButtons.forEach(button => button.addEventListener("click", handleBuyNow));
  }

  async function handleBuyNow(event: Event) {
    event.preventDefault();
    const button = event.currentTarget as HTMLElement;
    const productId = button.getAttribute("data-productid");
    if (!productId) return;

    const cartItems = getCartItemsFromCookie();
    if (!cartItems.includes(productId)) {
      cartItems.push(productId);
      document.cookie = `cartItems=${JSON.stringify(cartItems)};path=/;max-age=31536000`;
      document.dispatchEvent(new CustomEvent("cart:updated"));
    }

    window.location.href = "/nvitaciones/checkout";
  }

  // Inicialización de la galería
  function initializeGallery() {
    const mainImage = document.querySelector('.main-image') as HTMLImageElement;
    const mainImageContainer = document.querySelector('.main-image-container') as HTMLElement;
    const thumbnails = document.querySelectorAll('.thumbnail-wrapper');
    
    if (!mainImage || !thumbnails.length || !mainImageContainer) return;

    thumbnails[0].classList.add('active');

    thumbnails.forEach(thumb => {
      thumb.addEventListener('click', () => {
        const fullSizeImage = thumb.getAttribute('data-full-img');
        if (!fullSizeImage) return;
        
        mainImage.src = fullSizeImage;
        
        thumbnails.forEach(t => {
          t.classList[t === thumb ? 'add' : 'remove']('active');
        });
      });
    });
  }

  // Inicialización del reproductor de video
  function initializeVideoPlayer() {
    const video = document.getElementById("video-producto") as HTMLVideoElement;
    const play = document.getElementById("play") as HTMLDivElement;

    if (!play || !video) return;

    play.addEventListener("click", () => {
      if (video.paused) video.play();
      else video.pause();
    });
  }

  // Funciones auxiliares
  function getCartItemsFromCookie() {
    const cookie = document.cookie
      .split(";")
      .find((c) => c.trim().startsWith("cartItems="))
      ?.split("=")[1];

    return cookie ? JSON.parse(cookie) : [];
  }

  // Eventos de inicialización
  document.addEventListener('astro:page-load', () => {
    initializeSalesMessage();
    initializeBuyNowButtons();
    initializeGallery();
    initializeVideoPlayer();
  });

  // Inicialización inmediata si el documento ya está cargado
  if (document.readyState === 'complete') {
    initializeSalesMessage();
    initializeBuyNowButtons();
    initializeGallery();
    initializeVideoPlayer();
  }
</script>

<style lang="scss">
  @use "../../estilos/_variables" as *;
  #producto-conte {
    display: flex;
    align-items: center;
    gap: 2rem;
  }

  .info-adicional {
    margin: 2rem 0;
    padding: 1rem;
    border-radius: 8px;
    background-color: #f8f9fa;
  }



  .video-wrapper {
    position: relative;
    padding-bottom: 56.25%; /* 16:9 Aspect Ratio */
    height: 0;
    width: 100%;
    max-width: 600px;
    margin: 0 auto;

    video {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      border-radius: 8px;
    }
  }

  .beneficios {
    list-style: none;
    padding: 0;
    margin: 1rem 0;
    
    .check-item {
      position: relative;
      padding-left: 1.8rem;
      margin-bottom: 0.5rem;
      
      &::before {
        content: "✓";
        position: absolute;
        left: 0;
        color: $acento;
        font-weight: bold;
      }
    }
  }
  #producto-conte {
    display: flex;
    align-items: center;
    gap: 2rem;
  }

  .info-adicional {
    margin: 2rem 0;
    padding: 1rem;
    border-radius: 8px;
    background-color: #f8f9fa;
  }

 

  .video-wrapper {
    position: relative;
    padding-bottom: 56.25%; /* 16:9 Aspect Ratio */
    height: 0;
    width: 100%;
    max-width: 600px;
    margin: 0 auto;

    video {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      border-radius: 8px;
    }
  }

  .beneficios {
    list-style: none;
    padding: 0;
    margin: 1rem 0;
    
    .check-item {
      position: relative;
      padding-left: 1.8rem;
      margin-bottom: 0.5rem;
      
      &::before {
        content: "✓";
        position: absolute;
        left: 0;
        color: $acento;
        font-weight: bold;
      }
    }
  }
  .metadata {
    margin-top: 1rem;
    padding-top: 1rem;
    border-top: 1px solid #e9ecef;
  }

  .metadata p {
    margin: 0.5rem 0;
    color: #6c757d;
    text-transform: capitalize;
  }

  .buttons-container {
    display: flex;
    gap: 1rem;
    margin-top: 1rem;
  }
  .gallery-container {
    display: flex;
    gap: 1rem;
    margin: 0 auto;

  }

  .thumbnails-container {
    width: 59px;
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    width: 100px;
  }

  .thumbnail-wrapper {
    cursor: pointer;
    border: 2px solid transparent;
    border-radius: $radio;
    overflow: hidden;
    transition: all 0.3s ease;
    display: flex;
    justify-content: center;

    &:hover {
      background: #c8c8c8;
    }

    &.active {
      border: $acento;
    }
  }

  .thumbnail {
    width: 60%;
    height: auto;
    display: block;
    @include cel {
      width: 40%;
    }
  }
  .main-image-container {
    flex: 1;
    position: relative;
    overflow: hidden;
    border-radius: 8px;


    .main-image {
      max-width: 100%;
      width: auto;
      height: auto;
      display: block;
      margin: 0 auto;
      object-fit: contain;
      transition: transform 0.3s ease;
    }
  }

  @media (max-width: 640px) {
    .buttons-container {
      flex-direction: column;
    }
  }
</style>
