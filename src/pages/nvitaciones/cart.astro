---
import CartItem from "../../components/Pagos/CartItem.astro";
import Layout from "../../layouts/Layout.astro";
import { getTotalCartItems } from  "../../js/cart";
import Footer from "../../components/Footer.astro";
import Nav from "../../components/Nav.astro";
import { Icon } from "astro-icon/components";
import Btn from "../../components/Btn.astro";

const cartCookie = Astro.cookies.get("cartItems")?.value as unknown as string;

const totalCartItems = await getTotalCartItems(
  cartCookie ? JSON.parse(cartCookie) : []
);
---

<Layout title="Carrito de Compras - Nvitaciones">
  <div class="grid contenido">
    <Nav />
    
    <div class="cart-section">
      <div class="cart-header">
        <h1>Tu Carrito</h1>
      </div>

      {totalCartItems.length === 0 && (
        <div class="empty-cart">
     
          <Icon name="mdi:cart-off" width="50" height="50" />
          <p>Tu carrito está vacío</p>
          <a href="/" class="btn primary">Explorar Invitaciones</a>
        </div>
      )}

      {totalCartItems.length > 0 && (
        <div class="cart-content">
          <ul class="cart-list">
            {totalCartItems.map((cartItem) => <CartItem cartItem={cartItem} />)}
          </ul>

          <div class="cart-actions">
            <div class="cart-summary">
              <p class="total-items">{totalCartItems.length} {totalCartItems.length === 1 ? 'Nvitación' : 'Nvitaciones'}</p>
            </div>
            <div class="cart-buttons">
        
              <Btn
                liga="#"
                texto="Vaciar carrito"
                clases="btn-oscuro"
                claro={false}
                blank={false}
                icono="mdi:delete"
                id="delete-cart-btn"
              />
              <Btn
                liga="/nvitaciones/checkout"
                texto="Proceder al pago"
                clases="btn-claro"
                claro={false}
                blank={false}
                icono="mdi:arrow-right"
              />
            
            </div>
          </div>
        </div>
      )}
    </div>

    <Footer />
  </div>
</Layout>

<style>
  .cart-section {
    width: 100%;
    padding: 2rem;
    max-width: 1200px;
    margin: 0 auto;
  }

  .cart-header {
    margin-bottom: 2rem;
    text-align: center;
  }

 

  .empty-cart {
    text-align: center;
    padding: 3rem;
    background: white;
    border-radius: 10px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
  }

  .empty-cart i {
    font-size: 4rem;
    color: #ccc;
    margin-bottom: 1rem;
  }

  .cart-content {
    background: white;
    border-radius: 10px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    padding: 1rem;
  }

  .cart-list {
    list-style: none;
    padding: 0;
    margin: 0;
  }

  .cart-actions {
    margin-top: 2rem;
    padding-top: 1rem;
    border-top: 1px solid #eee;
  }

  .cart-summary {
    text-align: right;
    margin-bottom: 1rem;
  }

  .total-items {
    font-size: 1.1rem;
    color: #666;
  }

  .cart-buttons {
    display: flex;
    gap: 1rem;
    justify-content: flex-end;
    flex-wrap: wrap;
  }

  .btn {
    padding: 0.8rem 1.5rem;
    border-radius: 5px;
    border: none;
    cursor: pointer;
    font-size: 1rem;
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    text-decoration: none;
    transition: opacity 0.2s;
  }

  .btn:hover {
    opacity: 0.9;
  }

  .btn.warning {
    background: #e74c3c;
    color: white;
  }

  .btn.primary {
    background: #3498db;
    color: white;
  }

  @media (max-width: 768px) {
    .cart-buttons {
      justify-content: center;
    }
    
    .cart-summary {
      text-align: center;
    }
  }
</style>

<script>
import { deleteCartCookie } from "../../js/utils";

function initializeDeleteCart() {
  const deleteCartBtn = document.querySelector("#delete-cart-btn");

  deleteCartBtn?.addEventListener("click", (e) => {
    e.preventDefault();
    
    if (confirm("¿Estás seguro que deseas vaciar el carrito?")) {
      deleteCartCookie();
      // Dispatch evento para actualizar el contador del carrito
      document.dispatchEvent(new CustomEvent('cart:updated'));
      // Recargar la página
      window.location.reload();
    }
  });
}

// Inicializar en carga inicial
initializeDeleteCart();

// Reinicializar después de la navegación
document.addEventListener('astro:page-load', initializeDeleteCart);
</script>