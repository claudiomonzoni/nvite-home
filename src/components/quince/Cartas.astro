---
import { Icon } from 'astro-icon/components';

interface Props {
  icono: string;
  titulo: string;
  array?: Array<any>;
  fecha?: Date;
  codigo?: string;
}
const { icono, titulo, array, fecha, codigo } = Astro.props;

const formattedFecha = fecha ? new Date(fecha).toLocaleDateString("es-MX", { day: "2-digit", month: "long", year: "numeric" }) : null;
---
 
<div class="carta">
  <Icon name={icono} size={40} />
  <h3 class="overlay">{titulo}</h3>
  {
    fecha ? <p>{formattedFecha}</p> : <slot />
  }

  {
    array ? array.map(item => <li>{item}</li>)  :  <slot />
  }

  {
    codigo ? <p>{codigo}</p> : <slot />
  }
 
</div>

<style lang="scss" >
  @import "../../estilos/quince/_variables.scss";
  .overlay {
    // filter: ;
    // color: white;
    // filter: invert(20%);
    // mix-blend-mode: screen;
  }

  .carta {
    aspect-ratio: 1/1;
    flex: 1;
    text-align: center;
    background: $urlPatron, var(--terciario);
    background-blend-mode:color-burn;
    background-position: center;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    color: var(--gris);
    padding: $margen-min;
    position: relative;
    font-size: clamp(1.3rem, 1.3vw, 2vw);
    li{
      list-style: none;
      padding-bottom: $margen-min;
    }
    @extend .sombra;
    h3 {
      width: fit-content;
      color: var(--secundario);
      border-bottom: solid 1px var(--terciario);
      margin: $margen-min 0;
      font-size: clamp(2.5rem, 1.6vw, 3rem);
      @include cel {
        border-bottom: solid 1px var(--secundario);
      }
    }

    svg path{
        border: solid;
        fill: var(--gris);
      }
   
    
    img {
      max-width: 2.5rem;
      height: auto;
      margin: 0 auto;
    }

    @include cel {
      flex: 1 0 100%;
    }
  }
</style>
<script>
  import gsap from "gsap";
  import ScrollTrigger from "gsap/ScrollTrigger";

  const carta = gsap.utils.toArray(".carta");
  gsap.registerPlugin(ScrollTrigger);

  carta.forEach((cart: HTMLElement, id) => {
    let mm = gsap.matchMedia();

    mm.add("(min-width: 800px)", () => {
      const tl = gsap.timeline({
        scrollTrigger: {
          trigger: cart as HTMLElement,
          start: "top 60%",
          end: "bottom 80%",
          scrub: true,
        
        },
      });
      // desktop setup code here...
      tl.from(cart as HTMLElement, {
        ease: "power2.out",
        x: -20,
        opacity: 0,
        delay: id * 0.3,
      });
      tl.from(cart.children, {
        opacity: 0,
        y: -30,
      });
    });

    mm.add("(max-width: 799px)", () => {
      const tl = gsap.timeline({
        scrollTrigger: {
          trigger: cart as HTMLElement,
          start: "top 100%",
          end: "bottom 80%",
          scrub: true,
        },
      });
      // mobile setup code here...
      tl.from(cart as HTMLElement, {
        ease: "power2.out",
        y: 100,
        opacity: 0,
      });
      tl.from(cart.children, {
        opacity: 0,
        y: -30,
        stagger: 0.1,
      });
    });
  });
</script>
