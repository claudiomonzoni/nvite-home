---
import { Icon } from "astro-icon/components";

interface Props {
  icono: string;
  titulo: string;
  array?: Array<any>;
  fecha?: Date;
  codigo?: string;
  tonos?: Array<any>;
}
const { icono, titulo, array, fecha, codigo, tonos } = Astro.props;

const formattedFecha = fecha
  ? new Date(fecha).toLocaleDateString("es-MX", {
      day: "2-digit",
      month: "long",
      year: "numeric",
    })
  : null;

---

<div class="carta">
  <div class="icono">
    <Icon name={icono} size={40} />
  </div>
  <h3 class="overlay">{titulo}</h3>
  {fecha ? <p>{formattedFecha}</p> : <slot />}
  {
    tonos && tonos.length > 0 ? (
      <li>
        <div class="colores-circulos">
          {tonos.map((color) => (
            <span
              class="color-circulo"
              style={`background-color: ${color};`}
              title={color}
            />
          ))}
        </div>
      </li>
    ) : null
  }
  {array ? array.map((item) => <li><p> {item}</p></li>) : <slot />}

  {codigo ? <p>{codigo}</p> : <slot />}
</div>
<style>
  .colores-circulos {
    display: flex;
    gap: 0; /* Sin gap para que se encimen */
    margin-top: 1rem;
    justify-content: center;
    
  }
  .color-circulo {
    width: 1.5rem;
    height: 1.5rem;
    border-radius: 50%;
    display: inline-block;
    margin-left: -0.2rem; /* Encima los c√≠rculos */
    box-shadow: -1px 10px 25px 3px rgba(70,70,70,0.74);
-webkit-box-shadow: -1px 10px 25px 3px rgba(70,70,70,0.74);
-moz-box-shadow: -1px 10px 25px 3px rgba(70,70,70,0.74);
  }
  .color-circulo:first-child {
    margin-left: 0; /* El primero no se encime */
  }
  </style>
<script>
  import gsap from "gsap";
  import ScrollTrigger from "gsap/ScrollTrigger";

  const carta = gsap.utils.toArray(".carta");
  gsap.registerPlugin(ScrollTrigger);

  carta.forEach((cart: HTMLElement, id) => {
    let mm = gsap.matchMedia();

    mm.add("(min-width: 800px)", () => {
      const tl = gsap.timeline({
        scrollTrigger: {
          trigger: cart as HTMLElement,
          start: "top 60%",
          end: "bottom 80%",
          scrub: true,
        },
      });
      // desktop setup code here...
      tl.from(cart as HTMLElement, {
        ease: "power2.out",
        x: -20,
        opacity: 0,
        delay: id * 0.3,
      });
      tl.from(cart.children, {
        opacity: 0,
        y: -30,
      });
    });

    // mobile setup code here...
    mm.add("(max-width: 799px)", () => {
      const tl = gsap.timeline({
        scrollTrigger: {
          trigger: cart as HTMLElement,
          start: "top 100%",
          end: "top 50%",
          scrub: true,
        },
      });
      tl.from(cart as HTMLElement, {
        ease: "power2.out",
        y: 100,
        opacity: 0,
      });
      tl.from(cart.children, {
        opacity: 0,
        y: -30,
        stagger: 0.2,
      });
    });
  });
</script>
