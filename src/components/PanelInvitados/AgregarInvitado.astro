---
import { NvitaAuth } from "../../firebase/config";
import Checkbox from "./Checkbox.astro";
import {Usuario, db, eq} from "astro:db"
const usuarioEmail = NvitaAuth.currentUser?.email;
const usuarios = await db.select().from(Usuario ).where(eq(Usuario.email, usuarioEmail));
const usuarioId = usuarios[0].id
const tipoInvitacion = usuarios[0].tipo
const ruta = usuarios[0].ruta
---

<dialog  id="agrega-invitado-dialog" data-ref={usuarioId}>
  <div class="formulario">
    <form id="agregar-formu" >
      <h2>Agrega un invitado a tu panel</h2>
      <label for="nombre">Nombre del invitado</label>
      <input
        type="text"
        name="nombre"
        placeholder="Invitado, familiar o grupal"
        required
      />
      <label for="pases">Numero de pases</label>
      <input type="number" name="pases" required placeholder="Asignar numero de pases" />
      <label for="mesa">Numero de mesa</label>
      <input
        type="number"
        name="mesa"
        placeholder="Asignar numero de mesa (opcional)"
      />
      <label for="whatsapp">Numero de whatsapp</label>
      <input
        type="tel"
        name="numeroWhats"
        placeholder="Donde enviar la invitacion"
      />
      <label for="confirmado">¿Ya confirmo sus asistencia?</label>
      <Checkbox
        checked={false}
        inputId={Math.random()}
        name="confirmado"
        titulo="Confirmado"
      />

      <label for="vip">¿Es invitado importante?</label>
      <Checkbox
        checked={false}
        inputId={Math.random()}
        titulo="Invitado importante"
        name="vip"
      />
      <label for="InvitacionEnviada">¿Ya envio invitacion?</label>
      <Checkbox
        checked={false}
        inputId={Math.random()}
        titulo="Enviada"
        name="InvitacionEnviada"
      />

      <label for="noAsiste">Confirmo que no asistirá</label>
      <Checkbox
        checked={false}
        inputId={Math.random()}
        titulo="No asistirá"
        name="noAsiste"
      />

      <label for="tipoInvitacion">Tipo de invitación</label>
      <select name="tipoInvitacion" id="tipoInvitacion">
        <option value="Familiar">Familiar</option>
        <option value="Individual">Individual</option>
        <option value="Grupal">Grupal</option>
      </select>

      <input type="submit" value="Agregar invitación" />
    </form>
  </div>
  <button id="cerrar-dialog">Cerrar</button>
</dialog>

<script>
  import sanitize from "sanitize-html";
  const form = document.querySelector("#agrega-invitado-dialog") as HTMLFormElement;
  const refere = form.dataset.ref;
  console.log(form)

  // query selectors
  const addForm = document.querySelector("#agregar-formu") as HTMLFormElement;
  const openDialogBtn = document.getElementById(
    "agregar-invitado"
  ) as HTMLButtonElement;
  const closeDialogBtn = document.getElementById(
    "cerrar-dialog"
  ) as HTMLButtonElement;
  const dialog = document.querySelector("#agrega-invitado-dialog") as HTMLDialogElement;

  // dialog
  openDialogBtn.addEventListener("click", () => dialog.showModal());

  closeDialogBtn.addEventListener("click", () => dialog.close());

  dialog.addEventListener("click", (e) => {
    if (e.target === e.currentTarget) {
      dialog.close();
    }
  });

  // form submit
  addForm.addEventListener("submit", async (e) => {
    e.preventDefault();
    
      // Validaciones de cliente
      const nombreInput = addForm.querySelector("input[name='nombre']") as HTMLInputElement;
      const nombre = nombreInput.value.trim();
  if (!nombre) {
    alert("El nombre no puede estar vacío.");
    return;
  }

  const pases = parseInt((addForm.querySelector("input[name='pases']") as HTMLInputElement).value, 10);
  if (isNaN(pases) || pases < 1) {
    alert("El número de pases debe ser un número positivo.");
    return;
  }

    try {
      const formData = new FormData(addForm);
      const ref = formData.get("data-ref");
      const nombre = sanitize(formData.get("nombre") as string);
      const pases = sanitize(formData.get("pases") as string);
      const mesa = sanitize(formData.get("mesa") as string);
      const numeroWhats = sanitize(formData.get("numeroWhats") as string);
      const confirmado = formData?.get("confirmado") === "on" ? true : false;
      // const confirmado = formData?.get("confirmado") === "on" ? true : (false ?? false);
      const vip = formData?.get("vip") === "on" ? true : false;
      const InvitacionEnviada =
        formData?.get("InvitacionEnviada") === "on" ? true : false;
      const noAsiste = formData?.get("noAsiste") === "on" ? true : false;
      const tipoInvitacion = sanitize(formData.get("tipoInvitacion") as string);

      const req = await fetch("/api/addInvitados.json", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          usuarioId: refere,
          nombre,
          pases,
          mesa,
          numeroWhats,
          confirmado,
          vip,
          InvitacionEnviada,
          noAsiste,
          tipoInvitacion,
        }),
      });

      if (!req.ok) {
        throw new Error("Req no esta bien!");
      }

      const res = await req.json();
      if (res.success) {
        addForm.reset();
        dialog.close();
        location.reload();
      } else {
        throw new Error(res.message);
      }
    } catch (e) {
      if (e instanceof Error) {
        alert(e.message);
      }
    }
  });
</script>
