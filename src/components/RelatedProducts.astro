---
import { getCollection } from "astro:content";
import { Image } from "astro:assets";
import { getProductPrice } from "../js/cart";
import Btn from "./Btn.astro";

interface Props {
  currentProductId: string;
  category: string;
}

const { currentProductId, category } = Astro.props;

// Obtener todos los productos
const allProducts = await getCollection("productos");

// Filtrar productos relacionados
const relatedProducts = allProducts
  .filter(product => 
    product.data.metadata?.Categoria?.toLowerCase() === category.toLowerCase() && 
    product.id !== currentProductId
  )
  .slice(0, 3); // Tomar solo 3 productos

// Obtener precios
const relatedProductsWithPrices = await Promise.all(
  relatedProducts.map(async (product) => ({
    ...product,
    price: await getProductPrice(product)
  }))
);
---

<section class="related-products">
  <h2>Productos relacionados</h2>
  <div class="products-grid">
    {relatedProductsWithPrices.map((product) => (
      <div class="product-card">
        <div class="product-image">
          <a href={`/nvitaciones/${product.id}`}>
            <Image
              src={product.data.images[0]}
              alt={product.data.name}
              width={300}
              height={300}
              class="product-img"
            />
          </a>
        </div>
        <div class="product-info">
          <h3>{product.data.name}</h3>
          <p class="price">{product.price.slice(0, -2)}<sup>{product.price.slice(-2)}</sup></p>
          <Btn
            liga={`/nvitaciones/${product.id}`}
            texto="Ver detalles"
            clases="btn-oscuro"
            claro={false}
            icono="mdi:chevron-right"
          />
        </div>
      </div>
    ))}
  </div>
</section>

<style lang="scss">
  @use "../estilos/variables" as *;

  .related-products {
    margin-top: 4rem;
    padding: 2rem 0;
    
    h2 {
      text-align: center;
      color: $primario;
      margin-bottom: 2rem;
      font-size: 1.5rem;
    }
  }

  .products-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 2rem;
    
    @include cel {
      grid-template-columns: 1fr;
    }
  }

  .product-card {
    background: white;
    border-radius: $radio;
    overflow: hidden;
    transition: transform 0.3s ease;
    @extend .sombra;

    &:hover {
      transform: translateY(-5px);
    }
  }

  .product-image {
    position: relative;
    padding-top: 75%;
    overflow: hidden;

    a {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
    }

    .product-img {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }
  }

  .product-info {
    padding: 1rem;
    text-align: center;

    h3 {
      margin: 0.5rem 0;
      font-size: 1.1rem;
      color: $primario;
    }

    .price {
      color: $acento;
      font-size: 1.2rem;
      font-weight: bold;
      margin: 0.5rem 0;

      sup {
        font-size: 0.7em;
        vertical-align: super;
      }
    }
  }
</style>
