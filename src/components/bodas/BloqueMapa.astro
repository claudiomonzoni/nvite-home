---
interface Props {
  encabezado: string;
  dir: string;
  horario: string;
  lat: number;
  lng: number;
  mapName: string;
  icono: string;
}

const { encabezado, dir, lat, lng, mapName, horario, icono } = Astro.props;
import { Icon } from "astro-icon/components";
import Mapa from "../comunes/Mapa.astro";

import Anchor from "../comunes/Anchor.astro";
import Boton from "../comunes/Boton.astro";
console.log(lat);
---

<div id="bloqueMapa">
  <dialog class="modal" data-mapa={mapName}>
    <a href="#" id="close"><Icon name={"cerrar"} size={40} /></a>
    <Mapa lat={lat} lng={lng} mapName={mapName} />
  </dialog>

  <div class="der">
    <div class="bandeja">
      <Icon name={icono} size={35} />
      <h3>{encabezado}</h3>
      <address set:html={dir}>
       
      </address>
      <div id="bandeReloj">
        <hr class="linea1" />
        <Icon name="solar:clock-circle-linear" size={30} />
        <hr class="linea2" />
      </div>
      <time datetime="{horario}">{horario}</time>
    </div>
    <!-- <a href="#" class="btn">Ver mapa</a> -->

    <Anchor
      url={"#"}
      id={`${mapName}-btn`}
      icono="mdi:map-marker-outline"
      clases={"large"}
      conBorde={true}
      redondo={false}
      sombra={false}
      tema={"primario"}
      texto={"ver mapa"}
    />
    <Anchor
      url={`https://www.google.com/maps/dir/?api=1&destination=${lat},${lng}`}
      id={`${mapName}-btn-googlemaps`}
      icono={"solar:map-arrow-right-outline"}
      clases={"large"}
      conBorde={true}
      redondo={false}
      sombra={false}
      tema={"primario"}
      texto={"iniciar viaje"}
      target="_blank"
    />
  </div>
</div>

<script>
  // aqui el modal del mapa

  import gsap from "gsap";
  import ScrollTrigger from "gsap/ScrollTrigger";

  const bloqueMapa = gsap.utils.toArray("#bloqueMapa");
  gsap.registerPlugin(ScrollTrigger);

  bloqueMapa.forEach((bMapa: HTMLElement, id) => {
    let mm = gsap.matchMedia();
    let suma = 5 * id + 1;

    mm.add("(min-width: 800px)", () => {
      // desktop setup code here...
      const tl = gsap.timeline({
        scrollTrigger: {
          trigger: bMapa as HTMLElement,
          start: "top 100%",
          end: "bottom 70%",
          scrub: true,
        },
      });
      tl.from(bMapa as HTMLElement, {
        ease: "power2.out",
        x: -30 + suma++ * 1,
        opacity: 0,
        delay: 0 + suma++,
      });
      tl.from(bMapa.children, {
        opacity: 0,
        y: -50,
        stagger: 0.5,
      });
    });

    mm.add("(max-width: 799px)", () => {
      const tl = gsap.timeline({
        scrollTrigger: {
          trigger: bMapa as HTMLElement,
          start: "top 95%",
          end: "bottom 70%",
          scrub: true,
        },
      });
      // mobile setup code here...
      tl.from(bMapa as HTMLElement, {
        ease: "power2.out",
        y: -60,
      });
      tl.from(bMapa.children, {
        opacity: 0,
        y: 120,
        delay: -0.3,
        stagger: 0.2,
      });
    });

    // dentro del bucle encuentro el mapa del modal
    const btn = bMapa.querySelector(".large"); // Changed from .btn to .large
    const dialog = bMapa.querySelector("dialog");
    const cerrar = bMapa.querySelector("#close");

    if (btn && dialog) {
      btn.addEventListener("click", (e) => {
        e.preventDefault();
        dialog.showModal();

        // Dispatch custom event when dialog opens
        setTimeout(() => {
          const showEvent = new CustomEvent("map-dialog-opened", {
            detail: { mapName: dialog.getAttribute("data-mapa") },
          });
          document.dispatchEvent(showEvent);
        }, 100);
      });
    }

    if (cerrar && dialog) {
      cerrar.addEventListener("click", (e) => {
        e.preventDefault();
        dialog.close();
      });
    }
  });
</script>
