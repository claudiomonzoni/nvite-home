---
// tipo se refiere al tipo de Regalos, si es mesas, efectivo o transferencia
interface Mesa {
  url: string;
  titulo: string;
}

interface Props {
  frase: string;
  beneficiario?: string;
  banco?: string;
  cuenta?: string;
  tipo: Array<string>;
  mesas?: Array<Mesa>;
}
const { frase, beneficiario, banco, cuenta, tipo, mesas } = Astro.props;
import { Icon } from "astro-icon/components";
import Anchor from "../comunes/Anchor.astro";
---

<div id="Regalos">
  <div id="regalo">
    <Icon name={"mdi:wallet-giftcard"} size={40} />
    <h2>Regalos</h2>
    
    <p set:html={frase} />
    
    {tipo.includes("mesa") && Array.isArray(mesas) && mesas.length > 0 && (
      <div id="mesa-regalos">
        <h3>Mesa de regalos</h3>
        {mesas.map((mesa) => (
          <Anchor
            url={mesa.url}
            id={"estilo"}
            clases={"large"}
            conBorde={true}
            redondo={false}
            sombra={false}
            tema={"primario"}
            texto={mesa.titulo}
            target="_blank"
          />
        ))}
      </div>
    )}

    {tipo.includes("mesa") && (!Array.isArray(mesas) || mesas.length === 0) && (
      <div id="mesa-regalos-default">
        <h3>Mesa de regalos</h3>
        <Anchor
          url={"https://www.amazon.com.mx/registries"}
          id={"estilo"}
          clases={"large"}
          conBorde={true}
          redondo={false}
          sombra={false}
          tema={"primario"}
          texto={"Amazon"}
        />
        <Anchor
          url={"https://mesaderegalos.liverpool.com.mx/"}
          id={"estilo"}
          clases={"large"}
          conBorde={true}
          redondo={false}
          sombra={false}
          tema={"primario"}
          texto={"Liverpool"}
        />
      </div>
    )}
  </div>

  {tipo.includes("lluvia") && (
    <div id="lluvia">
      <h3>Lluvia de sobres</h3>
      <p>
        Preferimos que los presentes que deseen hacernos sean en efectivo, los
        cuales podr√°n colocar en un sobre
      </p>
    </div>
  )}

  {tipo.includes("transferencia") && beneficiario && banco && cuenta && (
    <div id="transferencias">
      <h3>Transferencias:</h3>
      <ul>
        <li><b>Beneficiario</b>: {beneficiario}</li>
        <li><b>Banco</b>: {banco}</li>
        <li><b>Cuenta</b>: {cuenta}</li>
      </ul>
    </div>
  )}
</div>

<script>
  import { gsap } from "gsap";
  import { ScrollTrigger } from "gsap/ScrollTrigger";

  gsap.registerPlugin(ScrollTrigger);
  const mm = gsap.matchMedia();

  mm.add("(min-width: 800px)", () => {
    // desktop setup code here...
    const tl = gsap.timeline({
      scrollTrigger: {
        trigger: "#regalo",
        start: "top 70%",
        end: "bottom 60%",
      },
    });
    tl.from("#regalo", {
      ease: "power2.out",
      opacity: 0,
      duration: 1,
      x: -60,
    });
    tl.from("#transferencias", {
      opacity: 0,
      ease: "power2.out",
      delay: 0.3,
    });
    tl.from("#transferencias > * ", {
      ease: "power2.out",
      opacity: 0,
      stagger: 0.2,
    });
  });

  mm.add("(max-width: 799px)", () => {
    // mobile setup code here...
    const tl = gsap.timeline({
      scrollTrigger: {
        trigger: "#regalo",
        start: "top 80%",
        end: "bottom 40%",
        scrub: true,
      },
    });
    tl.from("#regalo", {
      ease: "power2.out",
      opacity: 0,
      y: 60,
    });
    tl.from("#transferencias", {
      opacity: 0,
      ease: "power2.out",
      delay: 0.3,
    });
    tl.from("#transferencias > * ", {
      ease: "power2.out",
      opacity: 0,
      stagger: 0.2,
    });
  });
</script>
