---
interface Props {
  fecha: string; // Changed from Date to string
}

const { fecha } = Astro.props;
---

<div id="contador">
  <div class="bande">
    <p id="falta">Solo faltan:</p>
    <div id="numero"></div>
    <p id="dias">días</p>
  </div>
</div>
<h3>para nuestra boda.</h3>

<style lang="scss">
  @use "../../estilos/bodas/_variables.scss" as *;

  h3 {
    color: var(--primario);
    font-family: $garigol, serif;
    text-align: center;
    margin-top: $margen-cel;
    font-size: clamp(1.8rem, 2vw, 3rem);
  }
  #dias {
    transform: translateY(-60%);
  }
  #contador {
    display: flex;
    justify-content: center;
    align-items: center;
    color: var(--secundario);
    gap: 0.7rem;
    border: .5px solid var(--acento);
    position: relative;
    &:before {
      content: "";
      position: absolute;
      top: 0%;
      right: 0px;
      transform: translate(-50%, 50%);
      width: 130px;
      height: 130px;
      transform-origin: center;
      rotate: 180deg;
      background: url("/bodas/esquina-floral-1.jpg")
        no-repeat center;
      background-size: contain;
    }
    &:after {
      content: "";
      position: absolute;
      bottom: 0%;
      left: 0px;
      transform: translate(-50%, 50%);
      width: 130px;
      height: 130px;
      background: url("/bodas/esquina-floral-1.jpg")
        no-repeat center;
      background-size: contain;
    }
    &:before,
    &:after {
      @include cel {
        width: 70px;
        height: 70px;
      }
    }
  }
  .bande {
    text-align: center;
  }
  #numero {
    margin-top: $margen-cel;
    font-size: clamp(6.5rem, 10.5vw, 14rem);
    color: var(--acento);
    font-family: $encabezados, serif;
  }
  p:first-child {
    position: absolute;
    top: 0%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: var(--acento);
    border: solid .5px var(--secundario);
    background: url('./textuta-bg-2.webp') repeat;
    padding: $margen-min;
  }
  p {
    font-family: $encabezados, serif;
    color: var(--primario);
    font-size: clamp(1.5rem, 2.5vw, 3rem);
    margin: 0;
  }
</style>

<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.30.1/moment.min.js" type="text/javascript"></script>
<script define:vars={{ fecha }}>
  function calcularDiasRestantes(fechaObjetivo) {
    try {
      // Handle date string format YYYY-MM-DD
      const [year, month, day] = fechaObjetivo.split('-').map(num => parseInt(num));
      const targetDate = new Date(year, month - 1, day); // month is 0-based
      const today = new Date();
      
      // Reset both dates to midnight
      targetDate.setHours(0, 0, 0, 0);
      today.setHours(0, 0, 0, 0);
      
      const diffTime = targetDate.getTime() - today.getTime();
      const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));
      
      
      return diffDays;
    } catch (error) {
      console.error('Error calculating days:', error);
      return 0;
    }
  }

  function actualizarContador() {
    const diasRestantes = calcularDiasRestantes(fecha);

    const numeroElement = document.getElementById("numero");
    const diasElement = document.getElementById("dias");
    const faltaElement = document.getElementById("falta");

    if (diasRestantes <= 0) {
      numeroElement.innerHTML = "0";
      faltaElement.innerHTML = "¡Felicidades!";
      diasElement.innerHTML = "días";
      return;
    }

    numeroElement.innerHTML = diasRestantes;
    
    if (diasRestantes === 1) {
      diasElement.innerHTML = "día";
      faltaElement.innerHTML = "Solo falta";
    } else {
      diasElement.innerHTML = "días";
      faltaElement.innerHTML = "Solo faltan";
    }
  }

  actualizarContador();
  const intervalo = setInterval(actualizarContador, 3600000); // Actualizar cada hora
  document.addEventListener('astro:before-swap', () => clearInterval(intervalo));
</script>
