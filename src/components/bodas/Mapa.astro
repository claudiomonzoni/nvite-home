---
interface Props {
    lat: number;
    lng: number;
    mapName: string;
}
const { lat, lng, mapName } = Astro.props;
---

<div id={mapName}></div>

<style lang="scss">
  @use "../../estilos/bodas/_variables.scss" as *;
    #mapa1, #mapa2 {
      min-width: 80vw;
      min-height: 80vh;
      width: 100%;
      height: 100%;
    }
</style>

<link
  rel="stylesheet"
  href="https://unpkg.com/leaflet@1.8.0/dist/leaflet.css"
  integrity="sha512-hoalWLoI8r4UszCkZ5kL8vayOGVae1oxXe/2A4AO6J9+580uKHDO3JdHb7NzwwzK5xr/Fs0W40kiNHxM9vyTtQ=="
  crossorigin=""
/>
<script src="https://unpkg.com/leaflet@1.8.0/dist/leaflet.js" is:inline></script>

<script define:vars={{ lat, lng, mapName }}>
  let map;

  function initMap() {
    if (map) {
      map.remove(); // Remove existing map instance
    }

    map = L.map(mapName).setView([lat, lng], 16);
    L.tileLayer("https://tile.openstreetmap.org/{z}/{x}/{y}.png", {
      maxZoom: 27,
    }).addTo(map);

    L.circle([lat, lng], {
      color: "red",
      fillColor: "#E76128",
      fillOpacity: 0.5,
      radius: 30,
    }).addTo(map);

    // Force map to recalculate its container's size
    map.invalidateSize();
  }

  // Initialize map when script loads
  initMap();

  // Re-initialize map when dialog opens
  document.addEventListener('DOMContentLoaded', () => {
    const dialog = document.querySelector('dialog');
    if (dialog) {
      dialog.addEventListener('show', () => {
        setTimeout(() => {
          initMap();
        }, 100);
      });
    }
  });

  // Handle window resize
  window.addEventListener('resize', () => {
    if (map) {
      map.invalidateSize();
    }
  });
</script>