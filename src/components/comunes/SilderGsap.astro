---
---

<div class="galeSlider">
  <div class="progress-bar-container">
    <div class="progress-bar"></div>
  </div>
  <slot />
</div>

<style lang="scss">
  @use "../../estilos/temas/base/bodas/_variables.scss" as *;
  .progress-bar-container {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 2px;
      background: var(--fondo);
      z-index: 1000;
    }
  
    .progress-bar {
      height: 100%;
      width: 0;
      height: 5px;
      background: var(--primario);
    }
  
    .galeSlider {
      position: relative;
      height: 100vh;
      width: 100%;
      overflow: hidden;
    }

    :global(.galeSlider p img) {
      aspect-ratio: 1/1;
      width: 50%;
      height: 90%;
      object-fit: cover;
      position: absolute;
      border: solid 1.2rem white;
      @extend .sombra
    }
    
    @include cel{
      :global(.galeSlider p img) {
      width: 90%;
      height: 70%;
      object-fit: cover;
      position: absolute;
    }
    }
  </style>

    <script>
      import { gsap } from "gsap";
      import { ScrollTrigger } from "gsap/ScrollTrigger";
    
      gsap.registerPlugin(ScrollTrigger);
    
      setTimeout(() => {
        const slides = document.querySelectorAll(".galeSlider p img");
        
        // Configuración inicial de las imágenes
        slides.forEach((slide, index) => {
          gsap.set(slide, {
            position: "absolute",
            top: "50%",
            left: "50%",
            xPercent: -50,
            yPercent: -50,
            zIndex: slides.length - index,
            opacity: index === 0 ? 1 : 0
          });
        });
    
        // Timeline para el efecto de scroll
        const tl = gsap.timeline({
          scrollTrigger: {
            trigger: ".galeSlider",
            start: "top top",
            end: `+=${slides.length * 100}%`,
            scrub: 1,
            pin: true,
            anticipatePin: 1,
            snap: {
              snapTo: 1 / (slides.length - 1),
              duration: { min: 0.2, max: 0.5 },
              ease: "power1.inOut"
            },
            onUpdate: (self) => {
              gsap.to(".progress-bar", {
                width: `${self.progress * 100}%`,
                duration: 0.1
              });
            }
          },
        });
    
        // Animaciones para cada slide
        slides.forEach((slide, index) => {
          if (index < slides.length - 1) {
            const randomRotation = Math.random() * 30 - 15; // Genera un número aleatorio entre -15 y 15
            tl.to(slide, {
              opacity: 0,
              scale: 1.2,
              duration: 1,
              rotate: randomRotation,
            })
            .to(slides[index + 1], {
              opacity: 1,
              scale: 1,
              duration: 1,
              rotate: 0, // Aseguramos que la imagen entrante esté recta
            }, "<");
          }
        });
      }, 0);
    </script>
