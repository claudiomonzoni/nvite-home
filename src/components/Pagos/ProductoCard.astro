---
import { Image } from "astro:assets";
import type { CollectionEntry } from "astro:content";
import { getProductPrice } from "../../js/cart";
import Btn from "../Btn.astro";

type Props = {
  producto: CollectionEntry<"productos">;
};

const { producto } = Astro.props;
const precio = await getProductPrice(producto);
---

<article class="producto-card">
  <Image
    src={producto.data.images[0]}
    alt={producto.data.name}
    height={320}
    width={320}
  />
  <h2>{producto.data.name}</h2>
  <p>{producto.data.description}</p>
  <p>{precio}</p>
  <Btn
    liga={`/nvitaciones/${producto.id}`}
    clases="btn-oscuro"
    texto="Ver Nvitación"
    icono="mdi:chevron-double-right"
    claro={true} 
  />
  <Btn
    data-cart
    data-action="buy-now"
    data-productid={producto.id}
    liga="#"
    clases="btn-claro"
    texto="Comprar ahora"
    icono="mdi:cart"
    claro={true} 
  />
<article/>

<style>
  .producto-card {
    border: 1px solid #484848;
    padding: 1rem;
    margin: 1rem;
    text-align: center;
  }
</style>

<script>
  function initializeBuyNowButtons() {
    const buyNowButtons = document.querySelectorAll('[data-action="buy-now"]');
    
    buyNowButtons.forEach(button => {
      button.addEventListener('click', handleBuyNow);
    });
  }

  async function handleBuyNow(event: Event) {
    event.preventDefault();
    const button = event.currentTarget as HTMLElement;
    const productId = button.getAttribute('data-productid');

    if (!productId) return;

    // Obtener los items actuales del carrito
    const cartItems = getCartItemsFromCookie();
    
    // Verificar si el producto ya existe en el carrito
    if (!cartItems.includes(productId)) {
      // Solo agregar si no existe
      cartItems.push(productId);
      
      // Guardar el carrito actualizado
      document.cookie = `cartItems=${JSON.stringify(cartItems)};path=/;max-age=31536000`;
      
      // Disparar evento de actualización del carrito
      document.dispatchEvent(new CustomEvent("cart:updated"));
    }
    
    // Redirigir al checkout
    window.location.href = '/nvitaciones/checkout';
  }

  function getCartItemsFromCookie() {
    const cookie = document.cookie
      .split(";")
      .find((c) => c.trim().startsWith("cartItems="))
      ?.split("=")[1];
    
    return cookie ? JSON.parse(cookie) : [];
  }

  // Inicializar en la carga inicial
  initializeBuyNowButtons();

  // Reinicializar después de la navegación
  document.addEventListener("astro:page-load", initializeBuyNowButtons);
</script>
